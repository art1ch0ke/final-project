// üìå –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤
const movies = JSON.parse(localStorage.getItem('movies')) || [];
renderMovies(movies);

// üìå –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ —Ñ–∏–ª—å–º–æ–≤/—Å–µ—Ä–∏–∞–ª–æ–≤
function Movie(title, year, rating, type, perEpisode, episodes = 1) {
    this.title = title;
    this.year = year;
    this.rating = rating;
    this.type = type;
    this.duration = {
        episodes,
        perEpisode
    };

    this.getInfo = function () {
        console.log(`${this.title} (${this.year}) - ${this.type === '—Ñ–∏–ª—å–º' ? '–§–∏–ª—å–º' : '–°–µ—Ä–∏–∞–ª'}`);
        console.log(`–†–µ–π—Ç–∏–Ω–≥: ${this.rating}`);
    };

    this.getTotalDuration = function () {
        const total = this.duration.episodes * this.duration.perEpisode;
        console.log(`–û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${total} –º–∏–Ω—É—Ç`);
    };
}

// üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞
document.getElementById('type').addEventListener('change', function () {
    const episodesInput = document.getElementById('episodes');
    episodesInput.style.display = this.value === '—Å–µ—Ä–∏–∞–ª' ? 'block' : 'none';
    if (this.value !== '—Å–µ—Ä–∏–∞–ª') {
        episodesInput.value = ''; 
    }
});

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ñ–∏–ª—å–º–æ–≤
function sortMovies(criteria) {
    if (criteria === 'year') {
        movies.sort((a, b) => a.year - b.year);
    } else if (criteria === 'rating') {
        movies.sort((a, b) => b.rating - a.rating);
    } else if (criteria === 'duration') {
        movies.sort((a, b) => 
            (a.duration.episodes * a.duration.perEpisode) - 
            (b.duration.episodes * b.duration.perEpisode)
        );
    } else {
        console.log('–û—à–∏–±–∫–∞: –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "year", "rating" –∏–ª–∏ "duration"');
        return;
    }
    renderMovies(movies);
}

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
function renderMovies(movies) {
    const movieList = document.getElementById('movieList');
    movieList.innerHTML = '';
    
    movies.forEach(movie => {
        const movieItem = document.createElement('div');
        movieItem.classList.add('movie-item');
        movieItem.innerHTML = `
            <h3>${movie.title} (${movie.year})</h3>
            <p>–†–µ–π—Ç–∏–Ω–≥: ${movie.rating}</p>
            <p>–¢–∏–ø: ${movie.type === '—Ñ–∏–ª—å–º' ? '–§–∏–ª—å–º' : '–°–µ—Ä–∏–∞–ª'}</p>
            <p>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${movie.duration.episodes * movie.duration.perEpisode} –º–∏–Ω.</p>
        `;
        movieList.appendChild(movieItem);
    });
}

// üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞
document.getElementById('addMovie').addEventListener('click', () => {
    const title = document.getElementById('title').value;
    const type = document.getElementById('type').value;
    const year = parseInt(document.getElementById('year').value);
    const rating = parseFloat(document.getElementById('rating').value);
    const duration = parseInt(document.getElementById('duration').value);
    const episodes = type === '—Ñ–∏–ª—å–º' ? 1 : parseInt(document.getElementById('episodes').value) || 1;
    
    if (!title || isNaN(year) || isNaN(rating) || isNaN(duration)) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        return;
    }
    
    const media = new Movie(title, year, rating, type, duration, episodes);
    movies.push(media);
    localStorage.setItem('movies', JSON.stringify(movies));
    renderMovies(movies);

    // –û—á–∏—â–∞–µ–º –ø–æ–ª—è
    document.getElementById('title').value = '';
    document.getElementById('year').value = '';
    document.getElementById('rating').value = '';
    document.getElementById('duration').value = '';
    document.getElementById('episodes').value = '';
});

// üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
document.getElementById('sortMovies').addEventListener('click', () => {
    const criteria = document.getElementById('sort').value;
    sortMovies(criteria);
});

if(movies.length === 0) {
    // üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    movies.push(new Movie('–ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä', 2014, 8.6, '—Ñ–∏–ª—å–º', 169));
    movies.push(new Movie('–í–æ –≤—Å–µ —Ç—è–∂–∫–∏–µ', 2008, 9.5, '—Å–µ—Ä–∏–∞–ª', 47, 62));
    movies.push(new Movie('–î–∂–æ–Ω –£–∏–∫', 2014, 7.4, '—Ñ–∏–ª—å–º', 101));
    movies.push(new Movie('–®–µ—Ä–ª–æ–∫', 2010, 9.1, '—Å–µ—Ä–∏–∞–ª', 88, 13));
}

renderMovies(movies);